/-
Copyright (c) 2020 Scott Morrison. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Scott Morrison
-/
import category_theory.monoidal.category
import category_theory.const

/-!
# Monoidal structure on `C ‚•§ D` when `D` is monoidal.

When `C` is any category, and `D` is a monoidal category,
there is a natural "pointwise" monoidal structure on `C ‚•§ D`.

The initial intended application is tensor product of presheaves.
-/

universes v‚ÇÅ v‚ÇÇ u‚ÇÅ u‚ÇÇ

open category_theory
open category_theory.monoidal_category

variables {C : Type u‚ÇÅ} [category.{v‚ÇÅ} C]
variables {D : Type u‚ÇÇ} [category.{v‚ÇÇ} D] [monoidal_category.{v‚ÇÇ} D]

namespace category_theory.monoidal_category_functor_category

variables (F G F' G' : C ‚•§ D)

@[simps]
def tensor_obj : C ‚•§ D :=
{ obj := Œª X, F.obj X ‚äó G.obj X,
  map := Œª X Y f, F.map f ‚äó G.map f,
  map_id' := Œª X, by rw [F.map_id, G.map_id, tensor_id],
  map_comp' := Œª X Y Z f g, by rw [F.map_comp, G.map_comp, tensor_comp], }

variables {F G F' G'}
variables (Œ± : F ‚ü∂ G) (Œ≤ : F' ‚ü∂ G')

@[simps]
def tensor_hom : tensor_obj F F' ‚ü∂ tensor_obj G G' :=
{ app := Œª X, Œ±.app X ‚äó Œ≤.app X,
  naturality' :=
  Œª X Y f, by { dsimp, rw [‚Üêtensor_comp, Œ±.naturality, Œ≤.naturality, tensor_comp], } }

end category_theory.monoidal_category_functor_category

open category_theory.monoidal_category_functor_category

instance : monoidal_category (C ‚•§ D) :=
{ tensor_obj := Œª F G, tensor_obj F G,
  tensor_hom := Œª F G F' G' Œ± Œ≤, tensor_hom Œ± Œ≤,
  tensor_id' := Œª F G, by { ext, dsimp, rw [tensor_id], },
  tensor_comp' := Œª F G H F' G' H' Œ± Œ≤ Œ≥ Œ¥, by { ext, dsimp, rw [tensor_comp], },
  tensor_unit := (category_theory.functor.const C).obj (ùüô_ D),
  left_unitor :=  Œª F,
    nat_iso.of_components (Œª X, Œª_ (F.obj X)) (Œª X Y f, by { dsimp, rw left_unitor_naturality, }),
  right_unitor := Œª F,
    nat_iso.of_components (Œª X, œÅ_ (F.obj X)) (Œª X Y f, by { dsimp, rw right_unitor_naturality, }),
  associator := Œª F G H,
    nat_iso.of_components
      (Œª X, Œ±_ (F.obj X) (G.obj X) (H.obj X)) (Œª X Y f, by { dsimp, rw associator_naturality, }),
  left_unitor_naturality' := Œª F G Œ±, by { ext X, dsimp, rw left_unitor_naturality, },
  right_unitor_naturality' := Œª F G Œ±, by { ext X, dsimp, rw right_unitor_naturality, },
  associator_naturality' := Œª F G H F' G' H' Œ± Œ≤ Œ≥, by { ext X, dsimp, rw associator_naturality, },
  triangle' := Œª F G, begin ext X, dsimp, rw triangle, end,
  pentagon' := Œª F G H K, begin ext X, dsimp, rw pentagon, end, }
