/-
Copyright (c) 2022 Luke Kershaw. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jo√´l Riou
-/

import category_theory.triangulated.pretriangulated

/-!
# Triangulated Categories

This file contains the definition of triangulated categories, which are
pretriangulated categories which satisfy the octahedron axiom.

-/

noncomputable theory

namespace category_theory

open limits category preadditive pretriangulated
open_locale zero_object

variables {C : Type*} [category C] [preadditive C] [has_zero_object C] [has_shift C ‚Ñ§]
  [‚àÄ (n : ‚Ñ§), functor.additive (shift_functor C n)] [pretriangulated C]

namespace triangulated

variables {X‚ÇÅ X‚ÇÇ X‚ÇÉ Z‚ÇÅ‚ÇÇ Z‚ÇÇ‚ÇÉ Z‚ÇÅ‚ÇÉ : C} {u‚ÇÅ‚ÇÇ : X‚ÇÅ ‚ü∂ X‚ÇÇ} {u‚ÇÇ‚ÇÉ : X‚ÇÇ ‚ü∂ X‚ÇÉ} {u‚ÇÅ‚ÇÉ : X‚ÇÅ ‚ü∂ X‚ÇÉ}
  (comm : u‚ÇÅ‚ÇÇ ‚â´ u‚ÇÇ‚ÇÉ = u‚ÇÅ‚ÇÉ)
  {v‚ÇÅ‚ÇÇ : X‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÇ} {w‚ÇÅ‚ÇÇ : Z‚ÇÅ‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶(1 : ‚Ñ§)‚üß} (h‚ÇÅ‚ÇÇ : triangle.mk u‚ÇÅ‚ÇÇ v‚ÇÅ‚ÇÇ w‚ÇÅ‚ÇÇ ‚àà dist_triang C)
  {v‚ÇÇ‚ÇÉ : X‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ} {w‚ÇÇ‚ÇÉ : Z‚ÇÇ‚ÇÉ ‚ü∂ X‚ÇÇ‚ü¶(1 : ‚Ñ§)‚üß} (h‚ÇÇ‚ÇÉ : triangle.mk u‚ÇÇ‚ÇÉ v‚ÇÇ‚ÇÉ w‚ÇÇ‚ÇÉ ‚àà dist_triang C)
  {v‚ÇÅ‚ÇÉ : X‚ÇÉ ‚ü∂ Z‚ÇÅ‚ÇÉ} {w‚ÇÅ‚ÇÉ : Z‚ÇÅ‚ÇÉ ‚ü∂ X‚ÇÅ‚ü¶(1 : ‚Ñ§)‚üß} (h‚ÇÅ‚ÇÉ : triangle.mk u‚ÇÅ‚ÇÉ v‚ÇÅ‚ÇÉ w‚ÇÅ‚ÇÉ ‚àà dist_triang C)

include comm h‚ÇÅ‚ÇÇ h‚ÇÇ‚ÇÉ h‚ÇÅ‚ÇÉ

/-- The octahedron axiom (TR 4), see https://stacks.math.columbia.edu/tag/05QK -/
@[nolint unused_arguments]
def octahedron_exists : Prop :=
‚àÉ (m‚ÇÅ : Z‚ÇÅ‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÉ) (m‚ÇÉ : Z‚ÇÅ‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ) (comm‚ÇÅ : v‚ÇÅ‚ÇÇ ‚â´ m‚ÇÅ = u‚ÇÇ‚ÇÉ ‚â´ v‚ÇÅ‚ÇÉ)
    (comm‚ÇÇ : w‚ÇÅ‚ÇÇ = m‚ÇÅ ‚â´ w‚ÇÅ‚ÇÉ) (comm‚ÇÉ : v‚ÇÅ‚ÇÉ ‚â´ m‚ÇÉ = v‚ÇÇ‚ÇÉ) (comm‚ÇÑ : w‚ÇÅ‚ÇÉ ‚â´ u‚ÇÅ‚ÇÇ‚ü¶1‚üß' = m‚ÇÉ ‚â´ w‚ÇÇ‚ÇÉ),
    triangle.mk m‚ÇÅ m‚ÇÉ (w‚ÇÇ‚ÇÉ ‚â´ v‚ÇÅ‚ÇÇ‚ü¶1‚üß') ‚àà dist_triang C

omit comm h‚ÇÅ‚ÇÇ h‚ÇÇ‚ÇÉ h‚ÇÅ‚ÇÉ

namespace octahedron_exists

variables {comm h‚ÇÅ‚ÇÇ h‚ÇÇ‚ÇÉ h‚ÇÅ‚ÇÉ} (h : octahedron_exists comm h‚ÇÅ‚ÇÇ h‚ÇÇ‚ÇÉ h‚ÇÅ‚ÇÉ)

/-- A choice of morphism `m‚ÇÅ : Z‚ÇÅ‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÉ` for the octahedron axiom. -/
def m‚ÇÅ : Z‚ÇÅ‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÉ := h.some

/-- A choice of morphism `m‚ÇÉ : Z‚ÇÅ‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ` for the octahedron axiom. -/
def m‚ÇÉ : Z‚ÇÅ‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ := h.some_spec.some

/-- The triangle `Z‚ÇÅ‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ ‚ü∂ Z‚ÇÅ‚ÇÇ‚ü¶1‚üß` given by the octahedron axiom. -/
@[simps]
def triangle : triangle C := triangle.mk h.m‚ÇÅ h.m‚ÇÉ (w‚ÇÇ‚ÇÉ ‚â´ v‚ÇÅ‚ÇÇ‚ü¶1‚üß')

/-- The triangle `Z‚ÇÅ‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ ‚ü∂ Z‚ÇÅ‚ÇÇ‚ü¶1‚üß` given by the octahedron axiom
is distringuished. -/
lemma mem_dist_triang : h.triangle ‚àà dist_triang C :=
h.some_spec.some_spec.some_spec.some_spec.some_spec.some_spec

/-- The first morphism of triangles asserted by the octahedron axiom. -/
@[simps]
def triangle_morphism‚ÇÅ : triangle.mk u‚ÇÅ‚ÇÇ v‚ÇÅ‚ÇÇ w‚ÇÅ‚ÇÇ ‚ü∂ triangle.mk u‚ÇÅ‚ÇÉ v‚ÇÅ‚ÇÉ w‚ÇÅ‚ÇÉ :=
{ hom‚ÇÅ := ùüô X‚ÇÅ,
  hom‚ÇÇ := u‚ÇÇ‚ÇÉ,
  hom‚ÇÉ := h.m‚ÇÅ,
  comm‚ÇÅ' := by { dsimp, rw [id_comp, comm], },
  comm‚ÇÇ' := h.some_spec.some_spec.some,
  comm‚ÇÉ' := begin
    dsimp,
    simpa only [functor.map_id, comp_id]
      using h.some_spec.some_spec.some_spec.some,
  end }

/-- The second morphism of triangles asserted by the octahedron axiom. -/
@[simps]
def triangle_morphism‚ÇÇ : triangle.mk u‚ÇÅ‚ÇÉ v‚ÇÅ‚ÇÉ w‚ÇÅ‚ÇÉ ‚ü∂ triangle.mk u‚ÇÇ‚ÇÉ v‚ÇÇ‚ÇÉ w‚ÇÇ‚ÇÉ :=
{ hom‚ÇÅ := u‚ÇÅ‚ÇÇ,
  hom‚ÇÇ := ùüô X‚ÇÉ,
  hom‚ÇÉ := h.m‚ÇÉ,
  comm‚ÇÅ' := by { dsimp, rw [comp_id, comm], },
  comm‚ÇÇ' := begin
    dsimp,
    simpa only [id_comp] using
      h.some_spec.some_spec.some_spec.some_spec.some,
  end,
  comm‚ÇÉ' := h.some_spec.some_spec.some_spec.some_spec.some_spec.some, }

/- TODO (@joelriou): show that in order to verify the octahedron axiom, one may
replace the composable maps `u‚ÇÅ‚ÇÇ` and `u‚ÇÇ‚ÇÉ` by any isomorphic composable maps
and the given "cones" of `u‚ÇÅ‚ÇÇ`, `u‚ÇÇ‚ÇÉ`, `u‚ÇÅ‚ÇÉ` by any choice of cones. -/

end octahedron_exists

end triangulated

open triangulated

variable (C)

/-- A triangulated category is a pretriangulated which satisfies the octahedron axiom. -/
class triangulated :=
(octahedron' : ‚àÄ ‚¶ÉX‚ÇÅ X‚ÇÇ X‚ÇÉ Z‚ÇÅ‚ÇÇ Z‚ÇÇ‚ÇÉ Z‚ÇÅ‚ÇÉ : C‚¶Ñ ‚¶Éu‚ÇÅ‚ÇÇ : X‚ÇÅ ‚ü∂ X‚ÇÇ‚¶Ñ ‚¶Éu‚ÇÇ‚ÇÉ : X‚ÇÇ ‚ü∂ X‚ÇÉ‚¶Ñ ‚¶Éu‚ÇÅ‚ÇÉ : X‚ÇÅ ‚ü∂ X‚ÇÉ‚¶Ñ
  (comm : u‚ÇÅ‚ÇÇ ‚â´ u‚ÇÇ‚ÇÉ = u‚ÇÅ‚ÇÉ)
  ‚¶Év‚ÇÅ‚ÇÇ : X‚ÇÇ ‚ü∂ Z‚ÇÅ‚ÇÇ‚¶Ñ ‚¶Éw‚ÇÅ‚ÇÇ : Z‚ÇÅ‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß‚¶Ñ (h‚ÇÅ‚ÇÇ : triangle.mk u‚ÇÅ‚ÇÇ v‚ÇÅ‚ÇÇ w‚ÇÅ‚ÇÇ ‚àà dist_triang C)
  ‚¶Év‚ÇÇ‚ÇÉ : X‚ÇÉ ‚ü∂ Z‚ÇÇ‚ÇÉ‚¶Ñ ‚¶Éw‚ÇÇ‚ÇÉ : Z‚ÇÇ‚ÇÉ ‚ü∂ X‚ÇÇ‚ü¶1‚üß‚¶Ñ (h‚ÇÇ‚ÇÉ : triangle.mk u‚ÇÇ‚ÇÉ v‚ÇÇ‚ÇÉ w‚ÇÇ‚ÇÉ ‚àà dist_triang C)
  ‚¶Év‚ÇÅ‚ÇÉ : X‚ÇÉ ‚ü∂ Z‚ÇÅ‚ÇÉ‚¶Ñ ‚¶Éw‚ÇÅ‚ÇÉ : Z‚ÇÅ‚ÇÉ ‚ü∂ X‚ÇÅ‚ü¶1‚üß‚¶Ñ (h‚ÇÅ‚ÇÉ : triangle.mk u‚ÇÅ‚ÇÉ v‚ÇÅ‚ÇÉ w‚ÇÅ‚ÇÉ ‚àà dist_triang C),
  triangulated.octahedron_exists comm h‚ÇÅ‚ÇÇ h‚ÇÇ‚ÇÉ h‚ÇÅ‚ÇÉ)

end category_theory
