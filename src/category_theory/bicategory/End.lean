import category_theory.bicategory.basic
import category_theory.monoidal.category

namespace category_theory

variables {C : Type*} [bicategory C]

@[derive category]
def End_monoidal (X : C) := X ‚ü∂ X

open_locale bicategory

instance (X : C) : monoidal_category (End_monoidal X) :=
{ tensor_obj := Œª X Y, X ‚â´ Y,
  tensor_hom := Œª W X Y Z f g, (f ‚ñ∑ Y) ‚â´ (X ‚óÅ g),
  tensor_unit := ùüô _,
  associator := Œª X Y Z, Œ±_ X Y Z,
  left_unitor := Œª X, Œª_ X,
  right_unitor := Œª X, œÅ_ X,
  associator_naturality' := sorry,
  left_unitor_naturality' := sorry,
  right_unitor_naturality' := sorry,
  pentagon' := sorry, }

end category_theory
